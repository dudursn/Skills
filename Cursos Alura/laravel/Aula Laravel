Criando uma rota
	routes > web.php
		-> https://laravel.com/docs/5.8/routing
		Route::get($uri, $callback);
		Route::post($uri, $callback);
		Route::put($uri, $callback);
		Route::patch($uri, $callback);
		Route::delete($uri, $callback);
		Route::options($uri, $callback);

	Exemplos:

		//Chama o método listarSeries encontrado na classe SeriesController
			Route::get("/series", "SeriesController@listarSeries");
		//Chama o método inicio encontrado na classe Pasta\TesteController (com namespace)
			Route::get("/ola", "Pasta\TesteController@inicio");

Nomeando rotas

	Route::get("/series", "SeriesController@listarSeries")->name("listar_series");
	No html: 
		href="{{ route("listar_series")}}"
	No controller: 
		return redirect()->route("listar_series");
	Com parametros:
		Route::get("/teste/{id}", "TesteController@teste")->name("profile");
		return redirect()->route("profile", ["id" => 1]);

Modelo MVC 

	Controllers ficam na pasta app/Http/Controllers

	Models ficam na raiz da pasta app/

	Views ficam na pasta resources/views/

	php artisan make:model ModelName -m

Lidando com Views
	-> https://laravel.com/docs/5.8/blade
	As views são localizadas na pasta resources/views
	view('nomeDoarquivo');
	view('pasta.nomeDoArquivo');
	Ex.: view('series/index');

	Utilizar o blade
		@extends("layout")

		@section("cabecalho")
		Séries
		@endsection

		@foreach($ts as $t)	
			sadsadsad
		@enforeach
		
Controllers
	php artisan make:controller NameController
Lidando com requisições
	->https://laravel.com/docs/5.8/requests
	use Illuminate\Http\Request;

	Request $request;
	echo $request->url();
	//Mostra os parametros querystring
	var_dump($request->query() );
	$id = $request->query("id");
	$nome = $request->query("nome");
	echo $id;
	echo $nome;

Utilizando Migrations
	->https://laravel.com/docs/5.8/migrations
	php artisan make:migration nome_da_migracao
	php artisan migrate
		
Sessões
		$request->session()
			->flash(
				"mensagem",
				"Série removida com sucesso"
			); ou put()

		$mensagem = $request->session()->get("mensagem");

Validação de regras em formulario
	//Dentro da pasta "Http", terá surgido uma nova pasta "Requests"
	> php artisan make:request SeriesFormRequest

	public function authorize () {
		return true;
	}

	public function rules () {
		return [
			'nome' => 'required|min:3'
		];
	}

	public function messages (){
		return [
			'nome.required' => 'O campo nome é obrigatório',
			'nome.min' => 'O campo nome precisa ter pelo menos três caracteres'
		];
	}

	Utilizando nos controllers: SeriesFormRequest $request

	=>Mais informações: https://laravel.com/docs/5.7/validation

	
